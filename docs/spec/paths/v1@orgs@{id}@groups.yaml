get:
  tags:
    - Groups
  summary: Groups list
  description: |
    Returns list of groups registered in the service.
  operationId: getGroups
  parameters:
    - in: path
      name: 'id'
      required: true
      description: The ID of the organization
      schema:
        type: string
        example: "3a798290-caf1-496a-a7e5-4db32551b13d"
    - in: query
      name: 'filter[org_id]'
      description: Filter groups by organization ID
      required: false
      schema:
        type: string
        example: "3a798290-caf1-496a-a7e5-4db32551b13d"
    - $ref: '#/components/parameters/pageLimitParam'
    - $ref: '#/components/parameters/pageOrderParam'
    - $ref: '#/components/parameters/pageCursorParam'
    - in: query
      name: 'include'
      description: The resources to include in the response, such as the group users, etc.
      required: false
      schema:
        type: array
        items:
          type: string
          enum:
            - group_users
            - group_users.user
  responses:
    200:
      description: Success
      content:
        application/vnd.api+json:
          schema:
            type: object
            required:
              - data
              - included
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
              included:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/GroupUser'
                    - $ref: '#/components/schemas/User'
    400:
      $ref: '#/components/responses/invalidParameter'
    500:
      $ref: '#/components/responses/internalError'

post:
  tags:
    - Groups
  summary: Create a group
  security:
    - Bearer: []
  description: |
    Requires JWT token with the organization owner or superadmin permissions.

    Returns creates group.
  operationId: createGroup
  parameters:
    - in: path
      name: 'id'
      required: true
      description: The ID of the organization
      schema:
        type: string
        example: "3a798290-caf1-496a-a7e5-4db32551b13d"
  requestBody:
    required: true
    content:
      application/vnd.api+json:
        schema:
          type: object
          required:
            - data
          properties:
            data:
              $ref: '#/components/schemas/GroupCreate'
  responses:
    200:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            type: object
            required:
              - data
              - included
            properties:
              data:
                $ref: '#/components/schemas/Group'
              included:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/GroupUser'
    400:
      $ref: '#/components/responses/invalidParameter'
    401:
      $ref: '#/components/responses/invalidAuth'
    404:
      $ref: '#/components/responses/notFound'
    500:
      $ref: '#/components/responses/internalError'
